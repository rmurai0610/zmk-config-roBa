#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {

        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 Q             &kp W             &kp E           &kp R           &kp T                                               &kp Y        &kp U    &kp I      &kp O      &kp P
&hm LEFT_CONTROL A  &hm LEFT_SHIFT S  &hm LEFT_ALT D  &hm LEFT_GUI F  &kp G        &mkp MCLK               &kp GRAVE      &kp H        &kp J    &kp K      &kp L      &kp BACKSPACE
&hm LEFT_SHIFT Z    &kp X             &kp C           &kp V           &kp B        &kp MINUS               &kp RSHIFT     &kp N        &lt 1 M  &mkp LCLK  &mkp RCLK  &lt 2 PERIOD
&kp LCTRL           &kp LEFT_ALT      &kp LEFT_WIN    &lt 2 ESC       &lt 1 SPACE  &mt LEFT_GUI ENTER      &mt RCTRL TAB  &lt 2 SPACE                                 &lt 1 COMMA
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp N1     &kp N2        &kp N3         &kp N4     &kp N5                                &kp N6        &kp N7  &kp N8  &kp N9  &kp N0
&kp TILDE  &kp QUESTION  &kp EQUAL      &kp MINUS  &kp PLUS      &kp K_MUTE      &trans  &kp NUMBER_0  &kp N4  &kp N5  &kp N6  &trans
&kp GRAVE  &kp UNDER     &kp BACKSLASH  &kp SLASH  &kp ASTERISK  &trans          &trans  &kp N0        &kp N1  &kp N2  &kp N3  &trans
&trans     &trans        &trans         &trans     &trans        &trans          &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ARROWS-SYMBOLS {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN     &kp HASH          &kp DOLLAR        &kp PERCENT                                &kp CARET      &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LS(A)        &kp LBKT        &kp RBKT          &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp K_MUTE      &trans  &kp PAGE_UP    &mkp MB4       &kp UP_ARROW    &mkp MB5              &trans
&kp LS(Z)        &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp SEMICOLON     &kp COLON          &trans          &trans  &kp PAGE_DOWN  &kp LEFT       &kp DOWN_ARROW  &kp RIGHT             &trans
&kp LS(Q)        &kp LESS_THAN   &kp GREATER_THAN  &trans            &trans             &trans          &trans  &trans                                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(C_VOLUME_UP) LC(C_VOLUME_DOWN)>;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
