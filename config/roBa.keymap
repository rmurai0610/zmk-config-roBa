#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#include "includes/41.h"
#include <behaviors/num_word.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define QUICK_TAP_MS 175

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <QUICK_TAP_MS>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        l0_tap: layer_0_tap {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0_TAP";
        };

        l0_press: layer_0_press {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &macro_press &kp MACRO_PLACEHOLDER &macro_pause_for_release &macro_release &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0_PRESS";
        };

        l0_mo: layer_0_mo {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &macro_press &mo MACRO_PLACEHOLDER &macro_pause_for_release &macro_release &mo MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0_TOG";
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        hml0: homerow_mods_left0 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&l0_press>, <&l0_tap>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr0: homerow_mods_right_0 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&l0_press>, <&l0_tap>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        lt0: layer_0_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;

            flavor = "balanced";
            bindings = <&l0_mo>, <&l0_tap>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 7 Q              &kp W              &kp E            &kp R            &kp T                                    &kp Y            &kp U             &kp I             &kp O               &kp P
&hml LEFT_CONTROL A  &hml LEFT_SHIFT S  &hml LEFT_ALT D  &hml LEFT_GUI F  &kp G        &mkp MCLK      &trans       &kp H            &hmr RIGHT_GUI J  &hmr RIGHT_ALT K  &hmr RIGHT_SHIFT L  &hmr RIGHT_CONTROL SINGLE_QUOTE
&hml LEFT_SHIFT Z    &kp X              &kp C            &kp V            &kp B        &trans         &to 0        &kp N            &lt 5 M           &kp COMMA         &kp PERIOD          &lt 6 SLASH
&kp LCTRL            &kp LEFT_ALT       &kp LEFT_WIN     &lt 6 ESC        &lt 5 SPACE  &lt 3 TAB      &lt 2 ENTER  &lt 1 BACKSPACE                                                          &lt 3 COMMA
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUMBERS {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT                          &trans  &trans  &trans     &trans   &trans
&kp SEMI   &kp N4  &kp N5  &kp N6   &kp EQUAL  &trans         &trans  &trans  &trans  &trans     &trans   &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH   &trans         &trans  &trans  &trans  &kp COMMA  &kp DOT  &trans
&trans     &trans  &trans  &kp DOT  &kp N0     &kp MINUS      &trans  &trans                              &trans
            >;
        };

        SYMBOLS {
            bindings = <
&kp LEFT_BRACE  &kp AMPERSAND    &kp ASTRK    &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE                               &trans  &trans  &trans         &trans            &trans
&kp COLON       &kp DOLLAR       &kp PERCENT  &kp CARET             &kp PLUS               &trans         &trans  &trans  &trans  &trans         &trans            &trans
&kp TILDE       &kp EXCLAMATION  &kp AT_SIGN  &kp HASH              &kp PIPE               &trans         &trans  &trans  &trans  &kp LESS_THAN  &kp GREATER_THAN  &trans
&trans          &trans           &trans       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER      &trans  &trans                                           &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &trans                      &trans  &trans  &trans  &trans  &trans
&kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&lt0 7 Q              &l0_tap W            &l0_tap E          &l0_tap R          &l0_tap T                                    &l0_tap Y          &l0_tap U           &l0_tap I           &l0_tap O             &l0_tap P
&hml0 LEFT_CONTROL A  &hml0 LEFT_SHIFT S  &hml0 LEFT_ALT D  &hml0 LEFT_GUI F  &l0_tap G      &mkp MCLK       &trans        &l0_tap H          &hmr0 RIGHT_GUI J  &hmr0 RIGHT_ALT K  &hmr0 RIGHT_SHIFT L  &hmr0 RIGHT_CONTROL SINGLE_QUOTE
&hml LEFT_SHIFT Z     &l0_tap X            &l0_tap C          &l0_tap V          &l0_tap B      &trans          &to 0         &l0_tap N          &lt0 5 M           &mkp LCLK          &mkp RCLK            &lt0 6 SLASH
&l0_tap LCTRL          &l0_tap LALT         &l0_tap LGUI       &lt0 6 ESC        &lt0 5 SPACE  &lt0 3 TAB      &lt0 2 ENTER  &lt0 1 BACKSPACE                                                             &lt0 3 COMMA
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp N1     &kp N2        &kp N3         &kp N4     &kp N5                                &kp N6        &kp N7  &kp N8  &kp N9  &kp N0
&kp TILDE  &kp QUESTION  &kp EQUAL      &kp MINUS  &kp PLUS      &kp K_MUTE      &trans  &kp NUMBER_0  &kp N4  &kp N5  &kp N6  &trans
&kp GRAVE  &kp UNDER     &kp BACKSLASH  &kp SLASH  &kp ASTERISK  &trans          &trans  &kp N0        &kp N1  &kp N2  &kp N3  &trans
&trans     &trans        &trans         &trans     &trans        &trans          &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ARROWS-SYMBOLS {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN     &kp HASH          &kp DOLLAR        &kp PERCENT                                &kp CARET      &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LS(A)        &kp LBKT        &kp RBKT          &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp K_MUTE      &trans  &kp PAGE_UP    &mkp MB4       &kp UP_ARROW    &mkp MB5              &trans
&kp LS(Z)        &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp SEMICOLON     &kp COLON          &trans          &trans  &kp PAGE_DOWN  &kp LEFT       &kp DOWN_ARROW  &kp RIGHT             &trans
&kp LS(Q)        &kp LESS_THAN   &kp GREATER_THAN  &trans            &trans             &trans          &trans  &trans                                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(C_VOLUME_UP) LC(C_VOLUME_DOWN)>;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
