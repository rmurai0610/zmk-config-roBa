#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#include "includes/41.h"
#include <behaviors/num_word.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define QUICK_TAP_MS 200

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        kp0: layer_0_tap {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &to 0>;
            label = "TO_LAYER_0_TAP";
        };

        hold0: layer_0_press {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &to 0>;

            label = "TO_LAYER_0_PRESS";
        };

        mo0: layer_0_mo {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "TO_LAYER_0_MO";
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        hml0: homerow_mods_left0 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&hold0>, <&kp0>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr0: homerow_mods_right_0 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&hold0>, <&kp0>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        lt0: layer_0_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&mo0>, <&kp0>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 7 Q              &kp W              &kp E            &kp R            &kp T                                             &kp Y            &kp U             &kp I             &kp O               &kp P
&hml LEFT_CONTROL A  &hml LEFT_SHIFT S  &hml LEFT_ALT D  &hml LEFT_GUI F  &kp G        &mkp MCLK               &trans       &kp H            &hmr RIGHT_GUI J  &hmr RIGHT_ALT K  &hmr RIGHT_SHIFT L  &hmr RIGHT_CONTROL SINGLE_QUOTE
&kp Z                &kp X              &kp C            &kp V            &kp B        &trans                  &to 0        &kp N            &lt 6 M           &kp COMMA         &kp PERIOD          &kp SLASH
&kp LCTRL            &kp LEFT_ALT       &kp LEFT_WIN     &lt 6 ESCAPE     &lt 4 SPACE  &mt LEFT_SHIFT TAB      &lt 2 ENTER  &lt 1 BACKSPACE                                                          &lt 3 COMMA
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUMBERS {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT                           &trans  &trans  &trans  &trans  &kp LS(LEFT_GUI)
&kp SEMI   &kp N4  &kp N5  &kp N6   &kp EQUAL  &kp K_MUTE      &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH   &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &kp DOT  &kp N0     &kp MINUS       &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        SYMBOLS {
            bindings = <
&kp LEFT_BRACE  &kp AMPERSAND    &kp ASTRK    &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE                                &trans  &trans  &trans  &trans  &trans
&kp COLON       &kp DOLLAR       &kp PERCENT  &kp CARET             &kp PLUS               &kp K_MUTE      &trans  &trans  &trans  &trans  &trans  &trans
&kp TILDE       &kp EXCLAMATION  &kp AT_SIGN  &kp HASH              &kp PIPE               &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans           &trans       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER       &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &trans                          &trans      &trans  &trans  &trans  &trans
&kp F11  &kp F4  &kp F5  &kp F6  &trans  &kp K_MUTE      &trans  &trans      &trans  &trans  &trans  &trans
&kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans          &trans  &trans      &trans  &trans  &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans          &trans  &kp DELETE                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                     &kp LG(C)       &kp LG(V)       &trans        &trans           &kp LS(LG(NUMBER_5))
&trans  &trans  &trans  &trans  &trans  &kp K_MUTE      &kp LG(LS(EQUAL))  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &kp LG(LS(MINUS))  &mkp MB4        &kp PAGE_DOWN   &kp PAGE_UP   &mkp MB5         &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans             &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        MOUSE {
            bindings = <
&lt0 7 Q              &kp0 W              &kp0 E            &kp0 R            &kp0 T                                      &kp0 Y            &kp0 U             &kp0 I             &kp0 O               &kp0 P
&hml0 LEFT_CONTROL A  &hml0 LEFT_SHIFT S  &hml0 LEFT_ALT D  &hml0 LEFT_GUI F  &kp0 G        &mkp MCLK       &trans        &kp0 H            &hmr0 RIGHT_GUI J  &hmr0 RIGHT_ALT K  &hmr0 RIGHT_SHIFT L  &hmr0 RIGHT_CONTROL SINGLE_QUOTE
&kp0 Z                &kp0 X              &kp0 C            &kp0 V            &kp0 B        &trans          &to 0         &kp0 N            &mo 6              &mkp LCLK          &mkp RCLK            &kp0 SLASH
&kp0 LCTRL            &kp0 LALT           &kp0 LGUI         &mo 6             &lt0 4 SPACE  &lt0 3 TAB      &lt0 2 ENTER  &lt0 1 BACKSPACE                                                             &lt0 3 COMMA
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans  &trans                            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &out OUT_TOG  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans      &trans        &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans        &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
